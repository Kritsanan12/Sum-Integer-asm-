อัลกอริทึม atoi:
กำหนดให้ result = 0 (ใช้เก็บผลลัพธ์ตัวเลข)
ตั้ง pointer ไปที่ตัวอักษรแรกของสตริงอินพุต
ทำซ้ำขั้นตอนต่อไปนี้จนกว่าจะถึงจุดสิ้นสุดสตริง:
1. อ่านตัวอักษรปัจจุบันที่ pointer ชี้อยู่
2. ถ้าตัวอักษรเป็น null terminator (0) หรือ newline (10), ออกจากลูป
3. แปลงตัวอักษรเป็นตัวเลข โดยลบด้วยค่า ASCII ของ '0'
4. คูณ result ด้วย 10 (เลื่อนหลักไปทางซ้าย)
5. บวกค่าตัวเลขที่แปลงได้เข้ากับ result
6. เลื่อน pointer ไปตัวอักษรถัดไป
คืนค่า result

อัลกอริทึม itoa:
รับค่าจำนวนเต็มเป็นอินพุต (input)
เตรียมบัฟเฟอร์สำหรับเก็บสตริงผลลัพธ์ (ขนาดอย่างน้อย 10 ไบต์สำหรับจำนวนเต็ม 32 บิต)
เริ่มต้นที่ท้ายบัฟเฟอร์ (ตำแหน่งที่ 9)
ใส่ null terminator (0) ที่ท้ายสตริง
ทำซ้ำขั้นตอนต่อไปนี้จนกว่า input จะเป็น 0:
1. เลื่อนตำแหน่งในบัฟเฟอร์ถอยหลังไป 1 ตำแหน่ง
2. หารเอาเศษ input ด้วย 10 (input % 10)
3. แปลงเศษที่ได้เป็นตัวอักษร ASCII โดยบวกด้วยค่า ASCII ของ '0'
4. เก็บตัวอักษรที่แปลงได้ลงในบัฟเฟอร์ที่ตำแหน่งปัจจุบัน
5. หาร input ด้วย 10 (input = input / 10)
คืนค่าตำแหน่งเริ่มต้นของสตริงในบัฟเฟอร์
